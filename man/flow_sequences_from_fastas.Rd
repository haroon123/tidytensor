% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fasta_encode_tensor.R
\name{flow_sequences_from_fastas}
\alias{flow_sequences_from_fastas}
\title{Categorical keras-style generator function for training batches of sequence data stored in fasta-formatted files.}
\usage{
flow_sequences_from_fastas(fasta_files, directory = NULL,
  batch_size = 32, shuffle = FALSE, seed = NULL,
  class_mode = "categorical", alphabet = "nucleotide",
  trim_to = NULL, ...)
}
\arguments{
\item{fasta_files}{vector of fasta file names to read.}

\item{directory}{directory to read fasta_files from, use present working directory if NULL.}

\item{batch_size}{number of training examples and targets to include in each call of the generator.}

\item{shuffle}{whether to reshuffle sequences between epochs (once all batches have been generated and recycling happens).}

\item{seed}{random seed to set before each re-shuffle,}

\item{class_mode}{how the encode the target column into a target tensor; one of "categorical", "binary", or "identity".}

\item{alphabet}{either "nucleotide", "protein", or a named list that specifies the encoding, per base.}

\item{...}{additional arguments to be passed to or from methods (ignored).}
}
\value{
a new tensortree.
}
\description{
Given a list of fasta files, produces a keras-style generator function for generating batches of training data. Each
fasta file is treated as identifying a different class and targets are one-hot encoded for classification (class_mode = "binary" may also
be specified if there are eactly two classes); see examples.
}
\details{
\code{alphabet} may be set to \code{"nucleotide"} (for length-four one-hot encodings (or multi-hot if IUPAC codes))
are used)), \code{"protein"} (length-20 one-hot encodings), or a named list specifying per-base encodings; see examples. If any IDs are
specified that are not contained in the corresponding fasta_file a warning
will be produced, and the corresponding targets will be removed from the returned targets tensor.
}
\examples{
gen <- flow_sequences_from_fastas(c("inst/extdata/seqs.fasta", "inst/extdata/seqs2.fasta"),
                                  class_mode = "binary")
batch <- gen()

# categorical for more than two classes;
# also specify an alternative target encoding
gen <- flow_sequences_from_fasta(df,
                                 class_mode = "categorical",
                                 alphabet = list(A = c(1, 0),
                                                 C = c(0, 1),
                                                 G = c(0, -1)
                                                 T = c(-1, 0))

gen()

}
\seealso{
\code{\link{fasta_encode_tensor}}.
}
